[
  {
    "question": "다음은 애플리케이션 테스트에서 수행해야 할 작업들이다. 각 작업들을 수행 순서에 맞게 나열하시오 \n\nㄱ. 테스트 방법이 결정되면 그에 맞는 테스트 케이스를 작성한다.\nㄴ. 무엇을 테스트 할 것인지 결정한다.\nㄷ. 테스트 방법을 정한다.\nㄹ. 테스트의 예상 결과를 정리한다\nㅁ. 테스트를 수행한다.",
    "answer": "ㄴ, ㄷ, ㄱ, ㄹ, ㅁ"
  },
  {
    "question": "네트워크 보안에 대한 다음 설명에 해당하는 용어를 영문 약어로 쓰시오.\n 웹 서버로 들어오는 웹 트래픽을 검사하여 악의적인 코드나 공격 유형이 포함된 웹 트래픽을 차단해 주는 방화벽으로, SQL Injection이나 XSS 등과 같은 웹 공격을 탐지하고 차단한다. 일반 방화벽과는 달리 패킷의 페이로드를 직접 확인하기 때문에 외부의 공격뿐만 아니라 사전에 발견하지 못했던 내부의 위험 요소에 대한 방어가 가능하다",
    "answer": "WAF"
  },
  {
    "question": "사용자 인터페이스(UI)에 대한 다음 설명에서 괄호에 해당하는 용어를 <보기>에서 찾아쓰시오. \nㄱ : 텍스트, 아이콘, 메뉴 등을 사용자가 직접 조작하여 상호작용하는 인터페이스 ㄴ : 인터넷이나 웹 브라우저에서 웹 페이지를 조작할 때 사용하는 인터페이스 ㄷ : 문법적 명령이 아닌 자연어를 입력하여 상호작용하는 인터페이스 ㄹ: 키보드를 통해 텍스트로 이루어진 명령어를 입력하여 상호작용하는 인터페이스",
    "answer": "ㄱ: 그래픽 인터페이스, ㄴ: 웹 인터페이스, ㄷ: 텍스트 인터페이스, ㄹ: 명령어 인터페이스"
  },
  {
    "question": "컴퓨터 또는 컴퓨터와 인터넷 사이에서 파일을 주고받을 수 있도록 하는 원격 파일 전송 프로토콜인 FTP(File Transfer Protocol)의 기본 포트 번호를 쓰시오.",
    "answer": "21"
  },
  {
    "question": "애플리케이션 테스트에 대한 다음 설명에서 괄호에 들어갈 알맞은 용어를 쓰시오. \n가 : 소프트웨어가 수행할 특정 기능을 알기 위해서 각 기능이 완전히 작동되는 것을 입증하는 테스트로 기능 테스트라고도 한다. 사용자의 요구사항 명세를 보면서 테스트하며, 주로 구현된 기능을 테스트한다. 나 : 모듈의 원시 코드를 오픈시킨 상태에서 원시 코드의 논리적인 모든 경로를 테스트하여 테스트 케이스를 설계하는 방법이다.",
    "answer": "가 : 블랙박스 테스트, 나 : 화이트박스 테스트"
  },
  {
    "question": "다음 C언어로 구현된 프로그램을 실행하여 7을 입력했을 때, 그 실행결과를 쓰시오\n#include <stdio.h>\n\nmain() {\n  int n, count=0;\n  scanf(\"%d\", &n);\n  for(int i=2; i<=n/2;i++)\n    if(i%1==0)\n      count++;\n  printf(\"%d\",count);\n}",
    "answer": "2"
  },
  {
    "question": "네트워크에 대한 다음 설명에 해당하는 용어를 영문 약어로 쓰시오\n영문으로 된 도메인 이름을 IP 주소로 번역하는 인터넷 서비스로, 도메인 이름과 IP 주소를 매핑하는 거대한 분산형 데이터베이스 시스템이다. 통신하고자 하는 상대 호스트의 IP 주소를 모르더라도, 상대적으로 기억하기 쉬운 도메인 이름을 조회하면 시스템이 도메인 네임을 IP주소로 바꾸어 주는 역할을 수행한다.",
    "answer": "DNS"
  },
  {
    "question": "자료 구조에 대한 다음 설명에 해당하는 용어를 쓰시오. \n리스트의 한쪽 끝으로만 자료의 삽입, 삭제 작업이 이루어지는 자료 구조로, 가장 나중에 삽입된 자료가 가장 먼저 삭제되는 후입선출(LIFO; Last In First Out)방식으로 자료를 처리한다. 재귀 호출, 후위(Postfix) 표기법, 서브루틴 호출, 인터럽트 처리, 깊이 우선 탐색 등에 사용된다",
    "answer": "스택(Stack)"
  },
  {
    "question": "다음 C언어로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오.\n#include <stdio.h>\n\nmain() {\n  int n=3, r=0;\n  for(int i=1; i<10;i=i+2)\n    r=r+n*i;\n  printf(\"%d\", r);\n}",
    "answer": "75"
  },
  {
    "question": "OSI 7계층에 대한 다음 설명에 해당하는 계층을 쓰시오. \n두 개의 인접한 개방 시스템들 간에 신뢰성 있고 효율적인 정보 전송을 할 수 있도록 시스템 간 연결 설정과 유지 및 종료를 담당 하는 계층으로, 프레임의 시작과 끝을 구분하기 위한 프레임의 동기화 기능과 오류의 검출과 회복을 위한 오류 제어 기능을 제공한다.",
    "answer": "데이터 링크"
  },
  {
    "question": "다음 Python으로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오\nx=10\ny= 'test'\nprint(type(x))\nprint(type(y))",
    "answer": "<class 'int'>\n<class 'str'>"
  },
  {
    "question": "다음 설명에 해당하는 용어를 영문 약어로 쓰시오.\n 물리적으로 데이터 웨어하우스를 구축하지 않아도 실제 구축한 것과 같은 가상 시스템으로, 비교적 낮은 비용으로 빠른 시간 안에 데이터를 분석할 수 있고, 데이터의 추출 및 로딩 과정이 생략되어 실제 데이터 웨어하우스를 구축하는 것에 비해 노력과 시간이 절감된다. 하지만 온라인 트랜잭션 처리(OLTP) 작업이 대량으로 수행되거나 일정 시간 대에 집중되는 경우에는 시스템의 성능이 저하되거나 신뢰성 및 안정성에 문제가 발생할 수 있다.",
    "answer": "VDW"
  },
  {
    "question": "다음은 키(Key)에 대한 설명이다. 괄호에 공통으로 들어갈 알맞은 용어를 <보기>에서 찾아 쓰시오. (      )는 다른 릴레이션의 기본키를 참조하는 속성 또는 속성들의 집합을 의미한다. 한 릴레이션에 속한 속성 A와 참조 릴레이션의 기본키인 B가 동일한 도메인 상에서 정의되었을 때의 속성 A를 (      )라고 한다. (       )로 지정되면 참조 릴레이션의 기본키에 없는 값을 입력할 수 없다.",
    "answer": "Foreign Key"
  },
  {
    "question": "다음 C언어로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오\n#include <stdio.h>\n\nmain() {\n  int n1=15, n2=22;\n  n1 ^=n2;\n  n2 ^=n1;\n  n1 ^=n2;\n  printf(\"%d %d\", n1, n2);\n}",
    "answer": "22 15"
  },
  {
    "question": "<인사팀>의 인원이 총 20명이고, 그 중 3명은 20대, 6명은 30대, 나머지는 40대일 때, 다음 <SQL문>으로 검색될 수 있는 튜플의 개수(인원 수)를 쓰시오\nSELECT 이름 FROM 인사팀 WHERE 나이 BETWEENE 35 AND 49;",
    "answer": "11, 17"
  },
  {
    "question": "데이터베이스를 구축하고 릴레이션을 설계하는 과정에서 특정 릴레이션의 속성이 다중 값으로 구성되어 있어 이를 원자값으로 변환하는 과정을 수행하였다. 이와 같은 변환 과정을 가리키는 정규화를 쓰시오.",
    "answer": "제1 정규화"
  },
  {
    "question": "다음 C언어로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오\n#include <stdio.h>\n\nmain() {\n  int num=35, evencnt=0, oddcnt=0;\n  for(int i=1; i<=num; i++){\n    if(i%2==0)\n      evencnt++;\n    else\n      oddcnt++;\n  }\n  printf(\"%d %d\", evencnt, oddcnt);}",
    "answer": "17 18"
  },
  {
    "question": "다음은 <Student> 테이블에서 학생 수가 5명 이상인 과목에 대해 중간고사 평균을 조회하는 <SQL문>이다. 괄호에 알맞은 답을 적어 <SQL문>을 완성하시오\nSELECT sub_Code As 과목코드, AVG(midterm) As 중간고사평균 FROM Student WHERE num>5 GROUP BY sub_Code;",
    "answer": "5 이상"
  },
  {
    "question": "다음 C언어로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오\n#include <stdio.h>\n\nmain() {\n  int a=27, b=12;\n  int l, g;\n  for(int i=b; i>0; i--){\n    if(a%i==0&&b%i==0){\n      g=i;\n      break;\n    }\n  }\n  l=a*b/g;\n  printf(\"%d\",g+l);",
    "answer": "111"
  },
  {
    "question": "네트워크에 대한 다음 설명에서 괄호에 들어갈 알맞은 답을 영문 약어로 쓰시오\n제조사에서 네트워크 인터페이스 카드에 부여한 고유 식별자이다.\n인터넷에 접속하기 위해서는 IP 주소를 (       )주소로 변환하는 과정이 필요하며, 이 과정을 ARP가 수행한다.",
    "answer": "MAC"
  },
  {
    "question": "다음 테이블(salaries)에서 사원번호(emp_num)가 2073인 사원의 급여(salary)를 2500으로 갱신하는 SQL문을 작성하시오. (단, 문장 마지막의 세미콜론(;)의 여부는 채점에 영향을 주지 않는다)\nemp_num\tname\tsalary\n2071\tWhite\t2400\n2072\tRed\t2315\n2073\tBrown\t2478\n2074\tGreen\t3100\n2075\tPurPle\t4200",
    "answer": "UPDATE salaries SET salary =2500 WHERE emp_num=2073;"
  },
  {
    "question": "데이터베이스에 대한 다음 설명에서 괄호에 알맞은 답을 쓰시오\n스키마는 데이터베이스의 구조와 제약 조건에 관한 전반적인 명세를 기술한 것이다.\n(    가   )스키마 : 사용자나 응용 프로그래머가 각 개인의 입장에서 필요로 하는 데이터베이스의 논리적 구조를 정의한 것이다.\n(    나   )스키마 : 데이터베이스의 전체적인 논리적 구조이며, 모든 응용 프로그램이나 사용자들이 필요로 하는 데이터를 종합한 조직 전체의 데이터베이스로, 하나만 존재한다.\n(   다   )스키마 : 물리적 저장장치의 입장에서 본 데이터베이스 구조로, 실제로 저장될 레코드의 형식, 저장 데이터 항목의 표현 방법, 내부 레코드의 물리적 순서 등을 나타낸다.",
    "answer": "가 : 외부\n나 : 개념\n다 : 내부"
  },
  {
    "question": "다음 데이터베이스의 정의(1~4)와 그에 대한 설명(a~d)이다. 각 정의에 맞는 설명을 기호로 쓰시오.\n1) Operational Data\n2) Sharded Data\n3) Stored Data\n4) Integrated Data\na) 컴퓨터가 접근할 수 있는 저장 매체에 저장된 자료\nb) 자료의 중복을 배제한 데이터의 모임\nc) 여러 응용 시스템들이 공동으로 소유하고 유지하는 자료\nd) 조직의 고유한 업무를 수행하는 데 반드시 필요한 자료",
    "answer": "1) - d\n2) - c\n3) - a\n4) - b"
  },
  {
    "question": "다음 설명에 해당하는 스케줄링 기법을 쓰시오\n시분할 시스템(Time Sharing System)을 위해 고안된 방식으로, FCFS(FIFO) 알고리즘을 선점 형태로 변형한 기법이다.\nFCFS 기법과 같이 준비상태 큐에 먼저 들어온 프로세스가 먼저 CPU를 할당받지만 각 프로세스는 시간 할당량(Time Slice, Quantum동안만 실행한 후 실행이 완료되지 않으면 다음 프로세스에게 CPU를 넘거주고 준비상태 큐의 가장 뒤로 배치된다.\n할당되는 시간의 크기가 작으면 작은 프로세스들에게 유리하다",
    "answer": "라운드 로빈(RR)"
  },
  {
    "question": "다음 C언어로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오\n#include <stdio.h>\n\nmain() {\n  int sum=0;\n  int i=0;\n  for(i=0;i<=10;i++){\n    if(i%2!=0)\n      continue;\n        sum+=i;\n  }\n  printf(\"%d\",i+sum);",
    "answer": "41"
  },
  {
    "question": "컴퓨터 환경에 대한 다음 설명에서 괄호에 공통으로 들어갈 알맞은 답을 쓰시오\n컴퓨터 환경에는 (       ), 클라우드, 하이브리드 등이 있다\n(         )컴퓨팅은 기업이나 조직이 자체적으로 하드웨어, 소프트웨어 등의 모든 컴퓨팅 환경을 구축하는 것으로, 전통적인 서버나 데이터 센터를 의미하기도 한다\n초기에 큰 투자가 필요하지만, 서비스 제공자인 아마존, 구글 등의 외부 사업자에게 종속될 우려가 있는 클라우드 컴퓨팅과는 달리 시스템의 모든 설정을 사용자의 필요에 따라 제어할 수 있다는 장점이 있다.",
    "answer": "온-프레미스"
  },
  {
    "question": "애플리케이션 테스트에 대한 다음 설명에서 괄호에 공통으로 들어갈 알맞은 답을 쓰시오\n(     )테스트는 모듈 테스트라고도 불리며, 화이트 박스 테스트와 블랙박스 테스트 기법을 사용한다\n(     )테스트에는 모듈을 단독으로 실행할 수 있는 환경과 테스트에 필요한 데이터가 필요하다\n소프트웨어 생명 주기의 V-모델에서는 구현 단계에서 (     )테스트를 수행한다",
    "answer": "단위"
  },
  {
    "question": "다음 Java로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오\nclass Test {  \n  public static void main(String args[]) { \n    int i=17;\n    i+=1;\n    i-=2;\n    i*=3;\n    i/=4;\n    i%=5;\n    System.out.print(i); \n  } \n}",
    "answer": "2"
  },
  {
    "question": "애플리케이션 테스트에 대한 다음 설명에서 괄호에 들어갈 알맞은 답을 쓰시오\n인수 테스트는 개발한 소프트웨어가 사용자의 요구사항을 충족하는지에 중점을 두고 테스트하는 방법이다\n(     )테스트 : 개발자의 장소에서 사용자가 개발자 앞에서 행하는 테스트 기법으로, 테스트는 통제된 환경에서 행해지며, 오류와 사용상의 문제점을 사용자와 개발자가 함께 확인하며 기록한다\n베타 테스트 : 선정된 최종 사용자가 여러 명의 사용자 앞에서 행하는 테스트 기법으로, 실제 업무를 가지고 사용자가 직접 테스트 한다",
    "answer": "알파"
  },
  {
    "question": "인터넷 프로토콜에 대한 다음 설명에서 괄호에 들어갈 알맞은 답을 영문 약어로 쓰시오\n(가) : 파일 전송 프로토콜(FTP)을 지원하고 양방향 연결(Full Duplex Connection)형 서비스를 제공하는 프로토콜이다. 신뢰성 있는 경로를 확립하고 메시지 전송을 감독하며, 패킷의 분실, 손상, 지연이나 순서가 틀린 것 등이 발생할 때 투명성이 보장되는 통신을 제공한다.\n(나) : 간이 파일 전송 프로토콜(TFTP)을 지원하고 데이터 전송 전에 연결을 설정하지 않는 비연결형 서비스를 제공하는 프로토콜이다. 상대적으로 단순한 헤더 구조를 가지므로, 오버헤드가 적고, 흐름 제어나 순서 제어가 없어 전송 속도가 빠르다.\n실시간 전송에 유리하며, 신뢰성보다는 속도가 중요시되는 네트워크에서 사용된다",
    "answer": "(가) : TCP\n(나) : UDP"
  },
  {
    "question": "다음 설명에 해당하는 OSI 참조 모델의 계층을 쓰시오\n다양한 전송매체를 통해 비트 스트림을 전송한다\n전송에 필요한 두 장치 간의 실제 접속과 절단 등 기계적, 전기적, 기능적, 절차적 특성에 대한 규칙을 정의한다",
    "answer": "물리 계층(Physical Layer)"
  },
  {
    "question": "다음 C언어로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오\n#include <stdio.h>\nmain() {\n  int arr[6];\n  int max=0, min=99;\n  int sum=0;\n  for(int i=0; i<6;i++){\n    arr[i]=i*i;\n    sum+=arr[i];\n  }\n  for(int i=0;i<6;i++){\n    if (max<arr[i])\n      max=arr[i];\n    if (min>arr[i])\n      min=arr[i];\n  }\n  printf(\"%.2f\",(sum-max-min)/4.0);",
    "answer": "7.50"
  },
  {
    "question": "다음 C언어로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오\n#include <stdio.h>\n#include <math.h>\nmain() {\n  int arr[5];\n  for(int i=0; i<5;i++){\n    arr[i]=(i+2)+(i*2);\n  }\n  for(int i=0;i<5;i++){\n    printf(\"%d\",check(arr[i]));\n  }\n}\nint check(int a){\n  int n=(int)sqrt(a);\n  int i=2;\n  while(i<=n){\n    if(a%i==0) return 0;\n    i++;\n  }\n  return 1;\n}",
    "answer": "11010"
  },
  {
    "question": "다음 Java로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오\nclass Test {  \n  public static void main(String args[]) { \n    int a=26;\n    int b=91;\n int g=0;\n int c=a<b?a:b;\n for(int i=1; i<c;i++){\n      if(a%i==0 && b%i==0)\n        g=i;\n    }\n    System.out.print(g); \n  } \n}",
    "answer": "13"
  },
  {
    "question": "무결성에 대한 다음 설명에서 괄호에 들어갈 알맞은 답을 쓰시오\n무결성이란 데이터베이스에 저장된 데이터 값과 그것이 표현하는 현실 세계의 실제 값이 일치하는 정확성을 의미하며, 무결성 제약 조건은 데이터베이스에 들어 있는 데이터의 정확성을 보장하기 위해 부정확한 잦료가 데이터베이스 내에 저장되는 것을 방지하기 위한 제약 조건을 말한다\n(        )무결성 제약 조건 : 기본 테이블의 기본키를 구성하는 어떤 속성도 Null 값이나 중복값을 가질 수 없다는 규정이다\n도메인 무결성 제약 조건 : 주어진 속성 값이 정의된 도메인에 속한 값이어야 한다는 규정이다\n참조 무결성 제약 조건 : 외래키 값은 Null이거나 참조 릴레이션의 기본키 값과 동일해야 한다는 규정이다",
    "answer": "개체"
  },
  {
    "question": "다음 관계 대수식을 해석하여 SQL문으로 작성하시오.",
    "image": "https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FzRwk0%2FbtrZsELFNWr%2FYu475KGbhVkkwEyhUAIj21%2Fimg.png",
    "answer": "SELECT FNAME, LNAME,SALARY FROM EMP WHERE DNO=1005;"
  },
  {
    "question": "다음 C언어로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오 \n#include <stdio.h>\nmain() {\n  int i=17;\n  int j=8;\n  i+=1;\n  j*=i;\n  j-=i;\n  i+=j;\n  printf(\"%d %d\", i,j);",
    "answer": "91 136"
  },
  {
    "question": "다음 C언어로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오\n#include <stdio.h>\nmain() {\n  int arr[5]={1,2,3,4,5};\n  int sum=0;\n  for(int i=0;i<5;i++){\n    if(arr[i]%2==0) continue;\n    sum+=arr[i];\n  }\n  printf(\"%d\", sum);",
    "answer": "9"
  },
  {
    "question": "다음 <회원>테이블의 디그리(Degree)와 카디널리티(Cardinality)를 쓰시오",
    "image": "/QuizPeek/quiz/img/img.png",
    "answer": "degree: 3, cardinality: 4"
  },
  {
    "question": "트랜잭션의 특성 중 괄호에 들어가기에 적합한 데이터베이스의 기능을 그림에서 한 가지만 찾아 쓰시오.\n 원자성 : ( 1 )\n일관성 : 무결성 제약 조건, 동시성 제어\n고립성 : ( 2 )\n영속성 : 회복",
    "image": "https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcQaJQP%2FbtrZy9ElrBD%2Fw7qKGrcO8kLCZ1dggUoDl0%2Fimg.png",
    "answer": "1: 회복, 2: 동시성 제어"
  },
  {
    "question": "다음 Java 코드의 실행 결과를 쓰시오.\n\nclass Main {\n  public static void main(String args[]) {\n    int[] a = new int[8];\n    int i = 0;\n    int n = 11;\n    while(n > 0){\n      a[i++] = n % 2;\n      n /= 2;\n    }\n    for(i = 7; i >= 0; i--)\n      System.out.print(a[i]);\n  }\n}",
    "answer": "00001011"
  },
  {
    "question": "OSI 7계층 중 다음 설명에 해당하는 알맞은 계층을 쓰시오. \n개방 시스템들 간의 네트워크 연결을 관리하는 기능과 데이터의 교환 및 중계 기능을 하는 계층으로, 네트워크 연결의 설정 유지, 해제를 담당한다\n경로 설정(Rounting), 데이터 교환 및 중계, 트래픽 제어, 패킷 정보 등의 기능을 갖고 있따.\n대표적인 프로토콜 X.25, IP, ICMP, ARP, RARP가 있다",
    "answer": "네트워크 계층(Network Layer)"
  },
  {
    "question": "다음 Python으로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오.\n def f(n) : return lambda a:a*n k=f(3) print(k(10))",
    "answer": "30"
  },
  {
    "question": "다음 C언어로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오.\n\n#include <stdio.h>\n\nint main() {\n  int a[3][5] = {\n    {27, 13, 21, 41, 12},\n    {11, 20, 17, 35, 15},\n    {21, 15, 32, 14, 10}\n  };\n\n  int sum, ssum = 0;\n\n  for (int i = 0; i < 3; i++) {\n    sum = 0;\n    for (int j = 0; j < 5; j++) {\n      sum += a[i][j];\n    }\n    ssum += sum;\n  }\n\n  printf(\"%d\", ssum);\n\n  return 0;\n}",
    "answer": "304"
  },
  {
    "question": "애플리케이션 테스트에 대한 다음 설명에 해당하는 테스트 기법을 <보기>에서 찾아 쓰시오 \n\n단위 테스트가 완료된 모듈들을 결합하여 하나의 시스템으로 완성시키는 과정에서의 테스트를 의미한다\n모듈 간 또는 통합된 컴포넌트 간의 상호 작용 오류를 검사한다\n단위 테스트가 끝난 모듈을 통합하는 과정에서 발생하는 오류 및 결함을 찾는 테스트이다\n비점진적 방식과 점진적 방식으로 구분할 수 있다\n<보기>\nUnit Test\nIntegration Test\nSystem Test\nAcceptance Test\nUser Test\nBeta Test\nAlpha Test\nBlackbox Test",
    "answer": "Integration Test"
  },
  {
    "question": "다음 C언어로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오.\n #include <stdio.h> main() { int i=1, n=0; while(i<=50){ if(i%7==0) n+=i; i++; } printf(\"%d\", n); }",
    "answer": "196"
  },
  {
    "question": "스케줄링에 대한 다음 설명에 해당하는 알고리즘을 <보기>에서 찾아 쓰시오. \n준비상태 큐에서 기다리고 있는 프로세스들 중에서 실행 시간이 가장 짧은 프로세스에게 먼저 CPU를 할당하는 기법이다\n가장 적은 평균 대기 시간을 제공하는 최적 알고리즘이다\n실행 시간이 긴 프로세스는 실행 시간이 짧은 프로세스에게 할당 순위가 밀려 무한 연기 상태가 될 수 있다\n<보기>\nFCFS\nFIFO\nHRN\nDeadline\nSJF\nMQ\nRR\nSRT",
    "answer": "SJF"
  },
  {
    "question": "다음 Python으로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오. \n def af(a,b): return a+b def sf(a,b): return a-b print(sf(af(4,5),6))",
    "answer": "3"
  },
  {
    "question": "데이터베이스의 무결성에 대한 다음 설명에서 괄호에 들어갈 알맞은 답을 쓰시오. \n무결성은 데이터베이스에 저장된 데이터 값과 그것이 표현하는 현실 세계의 실제값이 일치하는 정확성을 의미하며, 무결성 제약 조건은 데이터베이스에 들어 있는 데이터의 정확성을 보장하기 위해 부정확한 자료가 데이터베이스 내에 저장되는 것을 방지하기 위한 제약 조건을 말한다\n(      )은 외래키 값은 Null이거나 참조 릴레이션의 기본키 값과 동일해야 한다는 제약 조건이다. 즉 릴레이션은 참조할 수 없는 외래키 값을 가질 수 없는 규정이다. ",
    "answer": "참조 무결성 제약 조건"
  },
  {
    "question": "인터넷에 대한 다음 설명에서 괄호에 들어갈 알맞은 답을 <보기>에서 찾아 쓰시오. \nIP주소는 인터넷에 연결된 모든 컴퓨터 자원을 구분하기 위한 고유한 주소이다. 이러한 IP 주소의 한 종류에 해당하는 IPv4는 네트워크 부분의 길이에 따라 A 클래스에서 E클래스까지 총 5단계로 구성되어 있다. 다음은 IPv4 주소를 8비트씩 4부분으로 나누어 네트워크 주소와 호스트 주소로 구분한 것이다.",
    "image": "/QuizPeek/quiz/img/img_1.png",
    "answer": "(가): C 클래스, (나): A 클래스"
  },
  {
    "question": "경로 제어에 대한 다음 설명에 해당하는 프로토콜을 <보기>에서 찾아 쓰시오. \n 거리 벡터 라우팅 프로토콜이라고 불리며, 최단 경로 탐색에 Bellman-Ford 알고리즘을 사용한다\n\n소규모 자율 시스템(AS) 내에서 효율적인 방법이다\n\n최대 홉(Hop) 수를  ( ) 로 제한하므로 ( ) 를 초과하는 자율 시스템은 구축할 수 없다\n\n라우팅 정보를 30초마다 네트워크 내의 모든 라우터에 알리며, 180초 이내에 새로운 라우팅 정보가 수신되지 않으면 해당 경로를 이상 상태로 간주한다",
    "answer": "15, RIP"
  },
  {
    "question": "TCP 헤더에 대한 다음 설명에서 괄호에 들어갈 알맞은 답을 <보기>에서 찾아 쓰시오. \nTCP는 신뢰성 있는 연결형 서비스와 패킷의 다중화, 순서 제어, 오류 제어, 흐름 제어 등의 기능을 제공하며, 이와 같은 기능을 제공하기 위해 데이터의 헤더에 다음과 같이 다양한 정보를 담고 있다\n\n(가) : 데이터의 순서를 저장하는 곳으로, 수신자는 이 정보를 바탕으로 분할된 세그먼트를 올바른 순서로 재조립할 수 있다\n(나) : 데이터를 올바르게 수신했음을 상대방에게 알릴 때 전달할 데이터가 저장되는 곳이다.",
    "image": "https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FmkcyL%2FbtrZB4IfZXf%2FsZCl5w4PCt1pk2jnRRTVk1%2Fimg.png",
    "answer": "(가) : Sequence Number , (나): cknowledgment Number"
  },
  {
    "question": "다음 JAVA로 구현된 프로그램을 분석하여 그 실행결과를 쓰시오.\nclass Main {\n  public static void main(String args[]) {\n    int a[][] = new int[3][3];\n    init(a);\n    data(a);\n    prnt(a);\n  }\n\n  static void init(int a[][]) {\n    for(int i = 0; i < 3; i++)\n      for(int j = 0; j < 3; j++)\n        a[i][j] = 0;\n  }\n\n  static void data(int a[][]) {\n    int v = 1;\n    for(int i = 0; i < 3; i++)\n      for(int j = i; j < 3; j++)\n        a[i][j] = v++;\n  }\n\n  static void prnt(int a[][]) {\n    for(int i = 0; i < 3; i++) {\n      for(int j = 0; j < 3; j++) {\n        if(a[i][j] == 0)\n          System.out.printf(\" \");\n        else\n          System.out.printf(\"%d\", a[i][j]);\n      }\n      System.out.println();\n    }\n  }\n}",
    "answer": "123\n  45\n    6"
  },
  {
    "question": "다음 C언어로 구현된 프로그램에서 화면에 5를 입력한 후 나타나는 결과를 쓰시오. \n#include <stdio.h> main() { int n, sum=0; printf(\"정수를 입력하시오 : \"); scanf(\"%d\",&n); for (int i=1; i<=n;i++) sum=sum+i; printf(\"%d\", sum); }",
    "answer": "15"
  },
  {
    "question": "애플리케이션 테스트에 대한 다음 설명에 해당하는 테스트 기법을 <보기>에서 찾아 쓰시오 \n 프로그램의 입력 조건에 타당한 입력 자료와 타당하지 않은 입력 자료의 개수를 균등하게 하여 테스트 케이스를 구성하고 입력자료에 맞는 결과가 출력되는지 확인하는 기법이다\n입력 데이터를 준비할 때 올바른 결과가 나타나는 입력 데이터의 범위 'n<=Data < M'에 해당하는 데이터 10개를 준비했다면, 범위에 포함되지 않는 'Data< n, Data >=M'에 해당하는 데이터도 10개를 준비하여 테스트해야 한다.",
    "answer": "Equivalence Partitioning"
  },
  {
    "question": "SQL에 대한 다음 설명에서 괄호에 들어갈 알맞은 명령어를 쓰시오. \n\nSQL의 하나인 DDL은 DB 구조, 데이터 형식, 접근 방식 등 DB를 구축하거나 수정할 목적으로 사용하는 언어로, 다음 3가지 명령어를 사용하여 표현한다.\n(  가  ) : 스키마, 도메인, 테이블 등의 개체를 정의하는 데 사용하는 명령어\n(  나  ) : 개체에 대한 정의를 변경하는 데 사용하는 명령어\n(  다  ) : 스키마, 도메인, 테이블 등의 개체를 삭제하는 데 사용하는 명령어",
    "answer": "(가): CREATE, (나): ALTER, (다): DROP"
  },
  {
    "question": "데이터베이스에 대한 다음 설명에서 괄호에 공통으로 들어갈 알맞은 답을 쓰시오.",
    "answer": "뷰(View)"
  },
  {
    "question": "다음 설명에 해당하는 알맞은 인터넷 서비스를 쓰시오. \n\n멀리 떨어져 있는 컴퓨터에 접속하여 자신의 컴퓨터처럼 사용할 수 있도록 해주는 서비스이다.\n프로그램을 실행하는 등 시스템 관리 작업을 할 수 있는 가상의 터미널(Virtual Terminal) 기능을 수행한다\n응용 계층(Application Layer)에서 제공하는 서비스이며, 주로 사용되는 포트 번호는 23이다. ",
    "answer": "텔넷(Telnet)"
  },
  {
    "question": "다음 C 언어로 작성된 프로그램을 분석하여 그 실행 결과를 쓰시오.\n\n#include <stdio.h>\nint main()\n{\n  int sum = 0;\n  int i = 329;\n  do\n  {\n    sum = 999 % i;\n    i++;\n  } while(sum != 0);\n  printf(\"%d\", i);\n  return 0;\n}",
    "answer": "334"
  },
  {
    "question": "문제 2 다음에 제시된 통신 제어 절차를 기호(㉠~㉤)를 이용해 순서대로 나열하시오. \n ㉠ 회선 절단\n㉡ 링크 연결\n㉢ 회선 접속\n㉣ 정보 전송\n㉤ 링크 해제",
    "answer": "ㄷ -> ㄴ -> ㄹ -> ㅁ -> ㄱ"
  },
  {
    "question": "다음은 애플리케이션 테스트와 소프트웨어 개발 단계를 연결하여 표현한 소프트웨어 생명 주기의V-모델이다.\n 괄호(①~⑧)에 들어갈 알맞은 용어를 <보기>에서 찾아 쓰시오.",
    "image": "/QuizPeek/quiz/img/img_2.png",
    "answer": "1: 요구사항, 2: 분석, 3: 설계, 4: 구현, 5:단위 테스트, 6:통합테스트, 7: 시스템 테스트, 8: 인수 테스트"
  },
  {
    "question": "다음 C 언어로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오.\n#include <stdio.h>\n#include <string.h>\nint main()\n{\nchar *str = \"abCDEfGh\";\nint count = 0;\nfor(int i=0; i<strlen(str); i++)\n{\nchar ch = str[i];\nif(ch>='A' && ch<='Z')\n{\ncount++;\n}\n}\nprintf(\"%d\", count);\nreturn 0;\n}",
    "answer": "4"
  },
  {
    "question": "축적 교환 방식은 송신 측에서 전송한 데이터를 송신 측 교환기에 저장시켰다가 이를 다시 적절한 통신 경로를 선택하여 수신 측 터미널에 전송하는 방식이다. 다음 <보기>에서 축적 교환 방식을 모두 찾아기호(㉠~㉣)로 쓰시오. \n ㉠ 회선 교환 방식(Circuit Switching) \n㉡ 메시지 교환 방식(Message Switched)\n㉢ 가상 회선 방식(Virtual Circuit)\n㉣ 데이터그램 방식(Datagram)",
    "answer": "메시지 교환 방식,가상회선방식, 데이터그램 방식"
  },
  {
    "question": "다음 JAVA로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오 \n public class Main\n{\npublic static void main(String[] args)\n{\nint a[] = {1, 2, 3, 4, 5, 6};\nint sum = 0;\nfor(int i:a)\n{\nsum += i;\n}\nSystem.out.print(sum);\n}\n}",
    "answer": "21"
  },
  {
    "question": "OSI(Open System Interconnection) 참조 모델은 다른 시스템 간의 원활한 통신을 위해 ISO(국제표준화기구)에서 제안한 통신 규약(Protocol)으로, 개방형 시스템(Open System) 간의 데이터 통신 시 필요한장비 및 처리 방법 등을 7단계로 표준화하여 규정했다. 또한 OSI 참조 모델에서는 동일 계층 간에 교환되는정보의 단위인 프로토콜 데이터 단위(PDU; Protocol Data Unit)를 이용해 정보를 주고 받는다. 다음은 OSI 7계층 중 일부 계층을 나열한 것이다. 괄호(①~④)에 들어갈 알맞은 프로토콜 데이터 단위(PDU) 쓰시오. \n ㆍ네트워크 계층 = ( ① )\nㆍ데이터 링크 계층 = ( ② )\nㆍ물리 계층 = ( ③ )\nㆍ전송 계층 = ( ④ )",
    "answer": "물리 : 비트, 데이터링크 : 프레임, 네트워크:패킷, 전송:세그먼트"
  },
  {
    "question": "오류 제어 기능은 데이터 전송 시 감쇠, 왜곡, 잡음에 의해 생성된 오류를 검출하거나 수정하는 기능으로, 데이터 전송의 신뢰성을 위해 반드시 필요한 기능이다. 다음이 설명하고 있는 오류 제어 방식이 무엇인지 쓰시오. \n데이터 전송 과정에서 발생한 오류를 검출하여, 검출된 오류를 재전송 요구 없이 스스로 수정하는 방식이다.\nㆍ송신 측에서는 문자나 프레임에 오류 검출을 위한 부가 정보를 추가시켜 전송하고, 수신 측에서는 이러한 부가 정보를 이용하여 자신이 수신한 데이터에 존재하는 오류를 발견하고 수정한다.\nㆍ재전송 요구가 없기 때문에 역 채널이 필요 없고, 연속적인 데이터 흐름이 가능하다.\nㆍ데이터 비트 이외에 오류 검출 및 수정을 위한 비트(잉여 비트)들이 추가로 전송되어야 하기 때문에 전송 효율이 떨어진다.\nㆍ오류의 검출과 수정을 위한 방식에는 해밍 코드 방식과 상승 코드 방식이 있다.",
    "answer": "Forward Error Correction"
  },
  {
    "question": "갱신문은 기본 테이블에 있는 튜플들 중에서 특정 튜플의 내용을 변경할 때 사용한다.\nㆍ갱신문을 사용하여 <회원> 테이블에서 ‘기부금’ 필드의 값이 1,000,000원에서 3,000,000원 사이인 회원들의 ‘등급’ 필드의 값을 “VIP”로 변경하시오.\n UPDATE 회원 ( ① ) 등급 = ‘VIP’ ( ② ) 기부금 BETWEEN 1000000 AND 3000000;",
    "answer": "1 : set, 2: where"
  },
  {
    "question": "다음 C 언어로 구현된 프로그램을 분석하여 <예시 화면>과 같이 “string”, “test”를 차례로 입력했을 때 그 실행 결과로 <예시 화면>의 괄호(①, ②)에 해당하는 출력 결과를 쓰시오. \n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main()\n{\nchar str[100];\nchar *ptr;\nint cnt = 2;\nwhile(1)\n{\nprintf(\"입력: \");\nscanf(\"%s\", str);\nptr = (char*)malloc(strlen(str) + 1);\nstrcpy(ptr, str);\nprintf(\"%d번 출력: \", cnt);\nfor (int i = strlen(ptr) - 1; i >= 0; i--)\n{\nprintf(\"%c\", ptr[i]);\n}\nif (cnt<=1)\nbreak;\nelse\ncnt--;\nprintf(\"\\n\");\n}\nreturn 0;\n}",
    "image": "/QuizPeek/quiz/img/img_3.png",
    "answer": "1 : gnirts, 2: tset"
  },
  {
    "question": "다음은 <예시 화면>과 같이 동물 전체 마리수와 동물 전체 다리 수를 입력받아 오리와 돼지가 각각 몇 마리인지를 출력하는 Java 프로그램이다. 프로그램을 분석하여 괄호(①, ②)에 들어갈 알맞은 변수명을쓰시오",
    "image": "/QuizPeek/quiz/img/img_4.png",
    "answer": "1:duckcnt, 2: pigcnt"
  },
  {
    "question": "다음 <처리조건>에 부합하도록 <SQL문-1>과 <SQL문-2>의 괄호(①~③)를 채워 SQL문을 완성하시오.",
    "image": "/QuizPeek/quiz/img/img_5.png",
    "answer": "1: and, 2: distinct, 3:in"
  },
  {
    "question": "다음 Python으로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오",
    "image": "/QuizPeek/quiz/img/img_6.png",
    "answer": "49 100 91"
  },
  {
    "question": "HDLC(High-level Data Link Control)는 비트(Bit) 위주의 프로토콜로, 각 프레임에 데이터 흐름을제어하고 오류를 검출할 수 있는 비트 열을 삽입하여 전송한다. 다음은 HDLC 프로토콜의 프레임 구조를 표현한 것이다. 괄호에 들어갈 알맞은 명칭을 한글로 쓰시오",
    "image": "/QuizPeek/quiz/img/img_7.png",
    "answer": "제어부"
  },
  {
    "question": "입․출력과 관련된 다음 설명에서 괄호(①, ②)에 공통으로 들어갈 알맞은 용어를 쓰시오.",
    "image": "/QuizPeek/quiz/img/img_8.png",
    "answer": "1: BIOS, 2: 버퍼링"
  },
  {
    "question": "SQL문을 완성하시오",
    "image": "/QuizPeek/quiz/img/img_9.png",
    "answer": "1: 학과, 2: 학생수 <= 30"
  },
  {
    "question": "애플리케이션 테스트와 관련한 다음 설명에서 괄호에 들어갈 알맞은 용어를",
    "image": "/QuizPeek/quiz/img/img_10.png",
    "answer": "코드 인스펙션"
  },
  {
    "question": "다음 데이터베이스와 관련된 내용에서 괄호(①~⑤)에 공통으로 들어갈 알맞은 용어나 명령어를 쓰시오",
    "image": "/QuizPeek/quiz/img/img_11.png",
    "answer": "1: 릴레이션, 2:도메인, 3:and, 4:having, 5:values"
  },
  {
    "question": "다음에 제시된 내용에서 괄호(①~⑤)에 공통으로 들어갈 알맞은 용어를 쓰시오",
    "image": "/QuizPeek/quiz/img/img_12.png",
    "answer": "1:정규화, 2: 이상, 3: 갱신, 4: C, 5: BCNF, Boyce-Codd "
  },
  {
    "question": "다음 프로세스(Process)와 관련된 내용에서 ①~④에 해당하는 기능을 수행하는 장치를 <보기>에서 찾아 쓰시오",
    "image": "/QuizPeek/quiz/img/img_13.png",
    "answer": "1:트래픽 제어기 2: 작업스케줄러, 3:프로세스 스케줄러, 4:디스패처"
  },
  {
    "question": "다음은 패리티 비트(Parity Bit)에 대한 설명이다. 각 괄호(①~④)에 들어갈 알맞은 내용을 쓰시오",
    "image": "/QuizPeek/quiz/img/img_14.png",
    "answer": "1: 1, 2: 2, 3: 없으며,4: 불가능"
  },
  {
    "question": "데이터베이스의 정규화(Normalization) 과정에서 테이블 R이 제1정규형이고, 기본키가 아닌 모든속성이 기본키에 대하여 완전 함수적 종속을 만족하는 정규형은 무엇인지 쓰시오",
    "answer": "2 정규형"
  },
  {
    "question": "다음 C 언어로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오.",
    "image": "/QuizPeek/quiz/img/img_15.png",
    "answer": "6"
  },
  {
    "question": "다음 Java로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오",
    "image": "/QuizPeek/quiz/img/img_16.png",
    "answer": "1025"
  },
  {
    "question": "다음 C 언어로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오",
    "image": "/QuizPeek/quiz/img/img_17.png",
    "answer": "7.00 그리고 9.00"
  },
  {
    "question": "다음 설명의 괄호에 들어갈 알맞은 용어를 쓰시오.",
    "image": "/QuizPeek/quiz/img/img_18.png",
    "answer": "개체"
  },
  {
    "question": "다음은 구구단의 3단을 출력하는 코드를 C 언어로 구현한 것이다. 괄호에 알맞은 수식을 채워 코드를 완성하시오",
    "image": "/QuizPeek/quiz/img/img_19.png",
    "answer": "n * i"
  },
  {
    "question": "MS-DOS에서 인터넷 서버까지의 경로를 추적하는 명령어로, IP 주소, 목적지까지 거치는 경로(장비의 수)의 수, 각 구간 사이의 데이터 왕복 속도를 알아볼 수 있는 명령어는 무엇인지 쓰시오",
    "image": "/QuizPeek/quiz/img/img_20.png",
    "answer": "tracert"
  },
  {
    "question": "다음 <보기>에 나열된 애플리케이션 테스트를 블랙박스 테스트와 화이트박스 테스트로 구분하여 쓰시오.",
    "image": "/QuizPeek/quiz/img/img_21.png",
    "answer": "22"
  },
  {
    "question": "학생(STUDENT) 테이블에 전기과 학생이 50명, 전산과 학생이 100명, 전자과 학생이 50명 있다고할 때, 다음 SQL문 ①, ②, ③의 실행 결과로 표시되는 튜플의 수를 쓰시오. (단, DEPT 필드는 학과를 의미한다) (5점)",
    "image": "/QuizPeek/quiz/img/img_22.png",
    "answer": "1: 200, 2: 3, 3: 1"
  },
  {
    "question": "다음 <처리조건>에 부합하는 <SQL문>이 완성되도록 괄호(①~③)에 적합한 명령어를 쓰시오",
    "image": "/QuizPeek/quiz/img/img_23.png",
    "answer": "1: into 2:values, 3:set"
  },
  {
    "question": "다음 <처리조건>에 부합하는 <SQL문>이 완성되도록 괄호(①~③)에 적합한 명령어를 쓰시오.",
    "image": "/QuizPeek/quiz/img/img_24.png",
    "answer": "1: where, 2:asc, 3: not"
  },
  {
    "question": "다음은 IPv4 주소가 사용하는 네트워크 상에서의 전송 방식에 관한 설명이다. 괄호(①~③)에 들어갈 알맞은 전송 방식을 쓰시오",
    "image": "/QuizPeek/quiz/img/img_26.png",
    "answer": "1: 멀티캐스트, 2: 브로드캐스트 , 3: 유니캐스트"
  },
  {
    "question": "다음 설명에 해당하는 알맞은 용어를 쓰시오.",
    "image": "/QuizPeek/quiz/img/img_27.png",
    "answer": "SNMP"
  },
  {
    "question": "다음 Python으로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오. (단, 출력문의 출력 서식을준수하시오.)",
    "image": "/QuizPeek/quiz/img/img_28.png",
    "answer": "101"
  },
  {
    "question": "다음 C 언어로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오",
    "image": "/QuizPeek/quiz/img/img_29.png",
    "answer": "2,3,4,5,10"
  },
  {
    "question": "IP 주소(IPv4)는 인터넷에 연결된 모든 컴퓨터 자원을 구분하기 위한 주소로, 8비트씩 4부분, 총32비트로 구성된다. 또한 IP 주소는 네트워크 부분의 길이에 따라 A 클래스에서 E 클래스까지 5개의 클래스로 구분하는데, 네트워크 부분의 길이가 16비트이며, 128~191로 시작하고 나머지 16비트가 호스트 부분인클래스는 무엇인지 쓰시오.",
    "answer": "B Class"
  },
  {
    "question": "단위 테스트에서 테스트의 대상이 되는 하위 모듈을 호출하고, 매개 변수(Parameter)를 전달하는가상의 모듈로, 상향식 테스트에서 사용되는 것은 무엇인지 쓰시오.",
    "answer": "드라이버"
  }
]
